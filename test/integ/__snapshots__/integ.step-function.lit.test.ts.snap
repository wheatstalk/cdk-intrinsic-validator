// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`snapshot 1`] = `
Object {
  "Mappings": Object {
    "ServiceprincipalMap": Object {
      "af-south-1": Object {
        "states": "states.af-south-1.amazonaws.com",
      },
      "ap-east-1": Object {
        "states": "states.ap-east-1.amazonaws.com",
      },
      "ap-northeast-1": Object {
        "states": "states.ap-northeast-1.amazonaws.com",
      },
      "ap-northeast-2": Object {
        "states": "states.ap-northeast-2.amazonaws.com",
      },
      "ap-northeast-3": Object {
        "states": "states.ap-northeast-3.amazonaws.com",
      },
      "ap-south-1": Object {
        "states": "states.ap-south-1.amazonaws.com",
      },
      "ap-southeast-1": Object {
        "states": "states.ap-southeast-1.amazonaws.com",
      },
      "ap-southeast-2": Object {
        "states": "states.ap-southeast-2.amazonaws.com",
      },
      "ap-southeast-3": Object {
        "states": "states.ap-southeast-3.amazonaws.com",
      },
      "ca-central-1": Object {
        "states": "states.ca-central-1.amazonaws.com",
      },
      "cn-north-1": Object {
        "states": "states.cn-north-1.amazonaws.com",
      },
      "cn-northwest-1": Object {
        "states": "states.cn-northwest-1.amazonaws.com",
      },
      "eu-central-1": Object {
        "states": "states.eu-central-1.amazonaws.com",
      },
      "eu-north-1": Object {
        "states": "states.eu-north-1.amazonaws.com",
      },
      "eu-south-1": Object {
        "states": "states.eu-south-1.amazonaws.com",
      },
      "eu-south-2": Object {
        "states": "states.eu-south-2.amazonaws.com",
      },
      "eu-west-1": Object {
        "states": "states.eu-west-1.amazonaws.com",
      },
      "eu-west-2": Object {
        "states": "states.eu-west-2.amazonaws.com",
      },
      "eu-west-3": Object {
        "states": "states.eu-west-3.amazonaws.com",
      },
      "me-south-1": Object {
        "states": "states.me-south-1.amazonaws.com",
      },
      "sa-east-1": Object {
        "states": "states.sa-east-1.amazonaws.com",
      },
      "us-east-1": Object {
        "states": "states.us-east-1.amazonaws.com",
      },
      "us-east-2": Object {
        "states": "states.us-east-2.amazonaws.com",
      },
      "us-gov-east-1": Object {
        "states": "states.us-gov-east-1.amazonaws.com",
      },
      "us-gov-west-1": Object {
        "states": "states.us-gov-west-1.amazonaws.com",
      },
      "us-iso-east-1": Object {
        "states": "states.amazonaws.com",
      },
      "us-iso-west-1": Object {
        "states": "states.amazonaws.com",
      },
      "us-isob-east-1": Object {
        "states": "states.amazonaws.com",
      },
      "us-west-1": Object {
        "states": "states.us-west-1.amazonaws.com",
      },
      "us-west-2": Object {
        "states": "states.us-west-2.amazonaws.com",
      },
    },
  },
  "Parameters": Object {
    "AssetParameters8dd02cc4ac473ca5b08800e92edaa31a1a7db4005928021d029c5363584f11b9ArtifactHash26B5BCAA": Object {
      "Description": "Artifact hash for asset \\"8dd02cc4ac473ca5b08800e92edaa31a1a7db4005928021d029c5363584f11b9\\"",
      "Type": "String",
    },
    "AssetParameters8dd02cc4ac473ca5b08800e92edaa31a1a7db4005928021d029c5363584f11b9S3Bucket40DFAF90": Object {
      "Description": "S3 bucket for asset \\"8dd02cc4ac473ca5b08800e92edaa31a1a7db4005928021d029c5363584f11b9\\"",
      "Type": "String",
    },
    "AssetParameters8dd02cc4ac473ca5b08800e92edaa31a1a7db4005928021d029c5363584f11b9S3VersionKey36104212": Object {
      "Description": "S3 key for asset version \\"8dd02cc4ac473ca5b08800e92edaa31a1a7db4005928021d029c5363584f11b9\\"",
      "Type": "String",
    },
    "AssetParametersc7c8e179917686cb9c4f5ee68753c6c10b5746a5516eb528a103c660513b7f4cArtifactHashE172E14D": Object {
      "Description": "Artifact hash for asset \\"c7c8e179917686cb9c4f5ee68753c6c10b5746a5516eb528a103c660513b7f4c\\"",
      "Type": "String",
    },
    "AssetParametersc7c8e179917686cb9c4f5ee68753c6c10b5746a5516eb528a103c660513b7f4cS3Bucket0DBF9D02": Object {
      "Description": "S3 bucket for asset \\"c7c8e179917686cb9c4f5ee68753c6c10b5746a5516eb528a103c660513b7f4c\\"",
      "Type": "String",
    },
    "AssetParametersc7c8e179917686cb9c4f5ee68753c6c10b5746a5516eb528a103c660513b7f4cS3VersionKeyC05805C0": Object {
      "Description": "S3 key for asset version \\"c7c8e179917686cb9c4f5ee68753c6c10b5746a5516eb528a103c660513b7f4c\\"",
      "Type": "String",
    },
    "AssetParametersff11416d5596b03499b7d71853b288cd55b7162e49359ac6d037ad1902d674fdArtifactHash6E87626F": Object {
      "Description": "Artifact hash for asset \\"ff11416d5596b03499b7d71853b288cd55b7162e49359ac6d037ad1902d674fd\\"",
      "Type": "String",
    },
    "AssetParametersff11416d5596b03499b7d71853b288cd55b7162e49359ac6d037ad1902d674fdS3Bucket1D5162B2": Object {
      "Description": "S3 bucket for asset \\"ff11416d5596b03499b7d71853b288cd55b7162e49359ac6d037ad1902d674fd\\"",
      "Type": "String",
    },
    "AssetParametersff11416d5596b03499b7d71853b288cd55b7162e49359ac6d037ad1902d674fdS3VersionKey52046A46": Object {
      "Description": "S3 key for asset version \\"ff11416d5596b03499b7d71853b288cd55b7162e49359ac6d037ad1902d674fd\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "IntrinsicValidator72B8901E": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "IntrinsicValidatorProviderframeworkonEvent82CE92C0",
            "Arn",
          ],
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "IntrinsicValidatorIsCompleteHandler423A78A1": Object {
      "DependsOn": Array [
        "IntrinsicValidatorIsCompleteHandlerServiceRoleDefaultPolicy0A0FF4F6",
        "IntrinsicValidatorIsCompleteHandlerServiceRole704A2806",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersc7c8e179917686cb9c4f5ee68753c6c10b5746a5516eb528a103c660513b7f4cS3Bucket0DBF9D02",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersc7c8e179917686cb9c4f5ee68753c6c10b5746a5516eb528a103c660513b7f4cS3VersionKeyC05805C0",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersc7c8e179917686cb9c4f5ee68753c6c10b5746a5516eb528a103c660513b7f4cS3VersionKeyC05805C0",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "STATE_MACHINE_ARN": Object {
              "Ref": "IntrinsicValidatorStateMachine503A46CB",
            },
          },
        },
        "Handler": "intrinsic-validator-provider.isCompleteHandler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "IntrinsicValidatorIsCompleteHandlerServiceRole704A2806",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "IntrinsicValidatorIsCompleteHandlerLogRetention2B92D325": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "IntrinsicValidatorIsCompleteHandler423A78A1",
              },
            ],
          ],
        },
        "RetentionInDays": 30,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "IntrinsicValidatorIsCompleteHandlerServiceRole704A2806": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "IntrinsicValidatorIsCompleteHandlerServiceRoleDefaultPolicy0A0FF4F6": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "states:ListExecutions",
                "states:ListStateMachines",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "IntrinsicValidatorStateMachine503A46CB",
              },
            },
            Object {
              "Action": Array [
                "states:DescribeExecution",
                "states:DescribeStateMachineForExecution",
                "states:GetExecutionHistory",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":states:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":execution:",
                    Object {
                      "Fn::Select": Array [
                        6,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "IntrinsicValidatorStateMachine503A46CB",
                            },
                          ],
                        },
                      ],
                    },
                    ":*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "states:ListActivities",
                "states:DescribeStateMachine",
                "states:DescribeActivity",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "IntrinsicValidatorIsCompleteHandlerServiceRoleDefaultPolicy0A0FF4F6",
        "Roles": Array [
          Object {
            "Ref": "IntrinsicValidatorIsCompleteHandlerServiceRole704A2806",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "IntrinsicValidatorOnEventHandler47CDD484": Object {
      "DependsOn": Array [
        "IntrinsicValidatorOnEventHandlerServiceRoleDefaultPolicy14391CA9",
        "IntrinsicValidatorOnEventHandlerServiceRoleEE869675",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersc7c8e179917686cb9c4f5ee68753c6c10b5746a5516eb528a103c660513b7f4cS3Bucket0DBF9D02",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersc7c8e179917686cb9c4f5ee68753c6c10b5746a5516eb528a103c660513b7f4cS3VersionKeyC05805C0",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersc7c8e179917686cb9c4f5ee68753c6c10b5746a5516eb528a103c660513b7f4cS3VersionKeyC05805C0",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "STATE_MACHINE_ARN": Object {
              "Ref": "IntrinsicValidatorStateMachine503A46CB",
            },
          },
        },
        "Handler": "intrinsic-validator-provider.onEventHandler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "IntrinsicValidatorOnEventHandlerServiceRoleEE869675",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "IntrinsicValidatorOnEventHandlerLogRetention2289578F": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "IntrinsicValidatorOnEventHandler47CDD484",
              },
            ],
          ],
        },
        "RetentionInDays": 30,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "IntrinsicValidatorOnEventHandlerServiceRoleDefaultPolicy14391CA9": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "IntrinsicValidatorStateMachine503A46CB",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "IntrinsicValidatorOnEventHandlerServiceRoleDefaultPolicy14391CA9",
        "Roles": Array [
          Object {
            "Ref": "IntrinsicValidatorOnEventHandlerServiceRoleEE869675",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "IntrinsicValidatorOnEventHandlerServiceRoleEE869675": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "IntrinsicValidatorProviderframeworkisComplete26093F1B": Object {
      "DependsOn": Array [
        "IntrinsicValidatorProviderframeworkisCompleteServiceRoleDefaultPolicy4529A03D",
        "IntrinsicValidatorProviderframeworkisCompleteServiceRole3970DE37",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters8dd02cc4ac473ca5b08800e92edaa31a1a7db4005928021d029c5363584f11b9S3Bucket40DFAF90",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters8dd02cc4ac473ca5b08800e92edaa31a1a7db4005928021d029c5363584f11b9S3VersionKey36104212",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters8dd02cc4ac473ca5b08800e92edaa31a1a7db4005928021d029c5363584f11b9S3VersionKey36104212",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Description": "AWS CDK resource provider framework - isComplete (IntegStepFunctionLit/IntrinsicValidator/Provider)",
        "Environment": Object {
          "Variables": Object {
            "USER_IS_COMPLETE_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "IntrinsicValidatorIsCompleteHandler423A78A1",
                "Arn",
              ],
            },
            "USER_ON_EVENT_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "IntrinsicValidatorOnEventHandler47CDD484",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.isComplete",
        "Role": Object {
          "Fn::GetAtt": Array [
            "IntrinsicValidatorProviderframeworkisCompleteServiceRole3970DE37",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "IntrinsicValidatorProviderframeworkisCompleteLogRetention8CFABEC6": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "IntrinsicValidatorProviderframeworkisComplete26093F1B",
              },
            ],
          ],
        },
        "RetentionInDays": 30,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "IntrinsicValidatorProviderframeworkisCompleteServiceRole3970DE37": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "IntrinsicValidatorProviderframeworkisCompleteServiceRoleDefaultPolicy4529A03D": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "IntrinsicValidatorOnEventHandler47CDD484",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "IntrinsicValidatorOnEventHandler47CDD484",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "IntrinsicValidatorIsCompleteHandler423A78A1",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "IntrinsicValidatorIsCompleteHandler423A78A1",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "IntrinsicValidatorProviderframeworkisCompleteServiceRoleDefaultPolicy4529A03D",
        "Roles": Array [
          Object {
            "Ref": "IntrinsicValidatorProviderframeworkisCompleteServiceRole3970DE37",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "IntrinsicValidatorProviderframeworkonEvent82CE92C0": Object {
      "DependsOn": Array [
        "IntrinsicValidatorProviderframeworkonEventServiceRoleDefaultPolicyC06C6BB0",
        "IntrinsicValidatorProviderframeworkonEventServiceRole5C0AB086",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters8dd02cc4ac473ca5b08800e92edaa31a1a7db4005928021d029c5363584f11b9S3Bucket40DFAF90",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters8dd02cc4ac473ca5b08800e92edaa31a1a7db4005928021d029c5363584f11b9S3VersionKey36104212",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters8dd02cc4ac473ca5b08800e92edaa31a1a7db4005928021d029c5363584f11b9S3VersionKey36104212",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Description": "AWS CDK resource provider framework - onEvent (IntegStepFunctionLit/IntrinsicValidator/Provider)",
        "Environment": Object {
          "Variables": Object {
            "USER_IS_COMPLETE_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "IntrinsicValidatorIsCompleteHandler423A78A1",
                "Arn",
              ],
            },
            "USER_ON_EVENT_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "IntrinsicValidatorOnEventHandler47CDD484",
                "Arn",
              ],
            },
            "WAITER_STATE_MACHINE_ARN": Object {
              "Ref": "IntrinsicValidatorProviderwaiterstatemachineDF9DBBD8",
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": Object {
          "Fn::GetAtt": Array [
            "IntrinsicValidatorProviderframeworkonEventServiceRole5C0AB086",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "IntrinsicValidatorProviderframeworkonEventLogRetention8AB1B53C": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "IntrinsicValidatorProviderframeworkonEvent82CE92C0",
              },
            ],
          ],
        },
        "RetentionInDays": 30,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "IntrinsicValidatorProviderframeworkonEventServiceRole5C0AB086": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "IntrinsicValidatorProviderframeworkonEventServiceRoleDefaultPolicyC06C6BB0": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "IntrinsicValidatorOnEventHandler47CDD484",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "IntrinsicValidatorOnEventHandler47CDD484",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "IntrinsicValidatorIsCompleteHandler423A78A1",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "IntrinsicValidatorIsCompleteHandler423A78A1",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "IntrinsicValidatorProviderwaiterstatemachineDF9DBBD8",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "IntrinsicValidatorProviderframeworkonEventServiceRoleDefaultPolicyC06C6BB0",
        "Roles": Array [
          Object {
            "Ref": "IntrinsicValidatorProviderframeworkonEventServiceRole5C0AB086",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "IntrinsicValidatorProviderframeworkonTimeoutC3AE935A": Object {
      "DependsOn": Array [
        "IntrinsicValidatorProviderframeworkonTimeoutServiceRoleDefaultPolicyE147BCD2",
        "IntrinsicValidatorProviderframeworkonTimeoutServiceRole673B9931",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters8dd02cc4ac473ca5b08800e92edaa31a1a7db4005928021d029c5363584f11b9S3Bucket40DFAF90",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters8dd02cc4ac473ca5b08800e92edaa31a1a7db4005928021d029c5363584f11b9S3VersionKey36104212",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters8dd02cc4ac473ca5b08800e92edaa31a1a7db4005928021d029c5363584f11b9S3VersionKey36104212",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Description": "AWS CDK resource provider framework - onTimeout (IntegStepFunctionLit/IntrinsicValidator/Provider)",
        "Environment": Object {
          "Variables": Object {
            "USER_IS_COMPLETE_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "IntrinsicValidatorIsCompleteHandler423A78A1",
                "Arn",
              ],
            },
            "USER_ON_EVENT_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "IntrinsicValidatorOnEventHandler47CDD484",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onTimeout",
        "Role": Object {
          "Fn::GetAtt": Array [
            "IntrinsicValidatorProviderframeworkonTimeoutServiceRole673B9931",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "IntrinsicValidatorProviderframeworkonTimeoutLogRetention94550242": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "IntrinsicValidatorProviderframeworkonTimeoutC3AE935A",
              },
            ],
          ],
        },
        "RetentionInDays": 30,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "IntrinsicValidatorProviderframeworkonTimeoutServiceRole673B9931": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "IntrinsicValidatorProviderframeworkonTimeoutServiceRoleDefaultPolicyE147BCD2": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "IntrinsicValidatorOnEventHandler47CDD484",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "IntrinsicValidatorOnEventHandler47CDD484",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "IntrinsicValidatorIsCompleteHandler423A78A1",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "IntrinsicValidatorIsCompleteHandler423A78A1",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "IntrinsicValidatorProviderframeworkonTimeoutServiceRoleDefaultPolicyE147BCD2",
        "Roles": Array [
          Object {
            "Ref": "IntrinsicValidatorProviderframeworkonTimeoutServiceRole673B9931",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "IntrinsicValidatorProviderwaiterstatemachineDF9DBBD8": Object {
      "DependsOn": Array [
        "IntrinsicValidatorProviderwaiterstatemachineRoleDefaultPolicy471E9E24",
        "IntrinsicValidatorProviderwaiterstatemachineRoleBB931BBD",
      ],
      "Properties": Object {
        "DefinitionString": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"StartAt\\":\\"framework-isComplete-task\\",\\"States\\":{\\"framework-isComplete-task\\":{\\"End\\":true,\\"Retry\\":[{\\"ErrorEquals\\":[\\"States.ALL\\"],\\"IntervalSeconds\\":5,\\"MaxAttempts\\":360,\\"BackoffRate\\":1}],\\"Catch\\":[{\\"ErrorEquals\\":[\\"States.ALL\\"],\\"Next\\":\\"framework-onTimeout-task\\"}],\\"Type\\":\\"Task\\",\\"Resource\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "IntrinsicValidatorProviderframeworkisComplete26093F1B",
                  "Arn",
                ],
              },
              "\\"},\\"framework-onTimeout-task\\":{\\"End\\":true,\\"Type\\":\\"Task\\",\\"Resource\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "IntrinsicValidatorProviderframeworkonTimeoutC3AE935A",
                  "Arn",
                ],
              },
              "\\"}}}",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "IntrinsicValidatorProviderwaiterstatemachineRoleBB931BBD",
            "Arn",
          ],
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
    },
    "IntrinsicValidatorProviderwaiterstatemachineRoleBB931BBD": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": Object {
                  "Fn::FindInMap": Array [
                    "ServiceprincipalMap",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    "states",
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "IntrinsicValidatorProviderwaiterstatemachineRoleDefaultPolicy471E9E24": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "IntrinsicValidatorProviderframeworkisComplete26093F1B",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "IntrinsicValidatorProviderframeworkisComplete26093F1B",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "IntrinsicValidatorProviderframeworkonTimeoutC3AE935A",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "IntrinsicValidatorProviderframeworkonTimeoutC3AE935A",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "IntrinsicValidatorProviderwaiterstatemachineRoleDefaultPolicy471E9E24",
        "Roles": Array [
          Object {
            "Ref": "IntrinsicValidatorProviderwaiterstatemachineRoleBB931BBD",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "IntrinsicValidatorStateMachine503A46CB": Object {
      "DependsOn": Array [
        "IntrinsicValidatorStateMachineRoleDefaultPolicy24A129F9",
        "IntrinsicValidatorStateMachineRole4BD3BBAE",
      ],
      "Properties": Object {
        "DefinitionString": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"StartAt\\":\\"Validations\\",\\"States\\":{\\"Validations\\":{\\"Type\\":\\"Parallel\\",\\"End\\":true,\\"Branches\\":[{\\"StartAt\\":\\"[0] StateMachineExecutionSucceeds\\",\\"States\\":{\\"[0] StateMachineExecutionSucceeds\\":{\\"End\\":true,\\"Catch\\":[{\\"ErrorEquals\\":[\\"States.ALL\\"],\\"Next\\":\\"[0] StateMachineExecutionSucceeds - Alarming\\"}],\\"Type\\":\\"Task\\",\\"Resource\\":\\"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::states:startExecution.sync:2\\",\\"Parameters\\":{\\"Input\\":{\\"anything\\":\\"you need\\"},\\"StateMachineArn\\":\\"",
              Object {
                "Ref": "StateMachine2E01A3A5",
              },
              "\\"}},\\"[0] StateMachineExecutionSucceeds - Alarming\\":{\\"Type\\":\\"Fail\\",\\"Error\\":\\"ExecutionFailed\\",\\"Cause\\":\\"",
              Object {
                "Ref": "StateMachine2E01A3A5",
              },
              " failed to execute\\"}}}]}}}",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "IntrinsicValidatorStateMachineRole4BD3BBAE",
            "Arn",
          ],
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
    },
    "IntrinsicValidatorStateMachineRole4BD3BBAE": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": Object {
                  "Fn::FindInMap": Array [
                    "ServiceprincipalMap",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    "states",
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "IntrinsicValidatorStateMachineRoleDefaultPolicy24A129F9": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "StateMachine2E01A3A5",
              },
            },
            Object {
              "Action": Array [
                "states:DescribeExecution",
                "states:StopExecution",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":states:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":execution:",
                    Object {
                      "Fn::Select": Array [
                        6,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "StateMachine2E01A3A5",
                            },
                          ],
                        },
                      ],
                    },
                    "*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "events:PutTargets",
                "events:PutRule",
                "events:DescribeRule",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":events:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":rule/StepFunctionsGetEventsForStepFunctionsExecutionRule",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "IntrinsicValidatorStateMachineRoleDefaultPolicy24A129F9",
        "Roles": Array [
          Object {
            "Ref": "IntrinsicValidatorStateMachineRole4BD3BBAE",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": Object {
      "DependsOn": Array [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersff11416d5596b03499b7d71853b288cd55b7162e49359ac6d037ad1902d674fdS3Bucket1D5162B2",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersff11416d5596b03499b7d71853b288cd55b7162e49359ac6d037ad1902d674fdS3VersionKey52046A46",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersff11416d5596b03499b7d71853b288cd55b7162e49359ac6d037ad1902d674fdS3VersionKey52046A46",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": Array [
          Object {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "StateMachine2E01A3A5": Object {
      "DependsOn": Array [
        "StateMachineRoleB840431D",
      ],
      "Properties": Object {
        "DefinitionString": "{\\"StartAt\\":\\"Pass\\",\\"States\\":{\\"Pass\\":{\\"Type\\":\\"Pass\\",\\"End\\":true}}}",
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "StateMachineRoleB840431D",
            "Arn",
          ],
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
    },
    "StateMachineRoleB840431D": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": Object {
                  "Fn::FindInMap": Array [
                    "ServiceprincipalMap",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    "states",
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
  },
}
`;
