// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`snapshot 1`] = `
Object {
  "Mappings": Object {
    "ServiceprincipalMap": Object {
      "af-south-1": Object {
        "states": "states.af-south-1.amazonaws.com",
      },
      "ap-east-1": Object {
        "states": "states.ap-east-1.amazonaws.com",
      },
      "ap-northeast-1": Object {
        "states": "states.ap-northeast-1.amazonaws.com",
      },
      "ap-northeast-2": Object {
        "states": "states.ap-northeast-2.amazonaws.com",
      },
      "ap-northeast-3": Object {
        "states": "states.ap-northeast-3.amazonaws.com",
      },
      "ap-south-1": Object {
        "states": "states.ap-south-1.amazonaws.com",
      },
      "ap-southeast-1": Object {
        "states": "states.ap-southeast-1.amazonaws.com",
      },
      "ap-southeast-2": Object {
        "states": "states.ap-southeast-2.amazonaws.com",
      },
      "ap-southeast-3": Object {
        "states": "states.ap-southeast-3.amazonaws.com",
      },
      "ca-central-1": Object {
        "states": "states.ca-central-1.amazonaws.com",
      },
      "cn-north-1": Object {
        "states": "states.cn-north-1.amazonaws.com",
      },
      "cn-northwest-1": Object {
        "states": "states.cn-northwest-1.amazonaws.com",
      },
      "eu-central-1": Object {
        "states": "states.eu-central-1.amazonaws.com",
      },
      "eu-north-1": Object {
        "states": "states.eu-north-1.amazonaws.com",
      },
      "eu-south-1": Object {
        "states": "states.eu-south-1.amazonaws.com",
      },
      "eu-south-2": Object {
        "states": "states.eu-south-2.amazonaws.com",
      },
      "eu-west-1": Object {
        "states": "states.eu-west-1.amazonaws.com",
      },
      "eu-west-2": Object {
        "states": "states.eu-west-2.amazonaws.com",
      },
      "eu-west-3": Object {
        "states": "states.eu-west-3.amazonaws.com",
      },
      "me-south-1": Object {
        "states": "states.me-south-1.amazonaws.com",
      },
      "sa-east-1": Object {
        "states": "states.sa-east-1.amazonaws.com",
      },
      "us-east-1": Object {
        "states": "states.us-east-1.amazonaws.com",
      },
      "us-east-2": Object {
        "states": "states.us-east-2.amazonaws.com",
      },
      "us-gov-east-1": Object {
        "states": "states.us-gov-east-1.amazonaws.com",
      },
      "us-gov-west-1": Object {
        "states": "states.us-gov-west-1.amazonaws.com",
      },
      "us-iso-east-1": Object {
        "states": "states.amazonaws.com",
      },
      "us-iso-west-1": Object {
        "states": "states.amazonaws.com",
      },
      "us-isob-east-1": Object {
        "states": "states.amazonaws.com",
      },
      "us-west-1": Object {
        "states": "states.us-west-1.amazonaws.com",
      },
      "us-west-2": Object {
        "states": "states.us-west-2.amazonaws.com",
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "IntrinsicValidator72B8901E": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "IntrinsicValidatorProviderframeworkonEvent82CE92C0",
            "Arn",
          ],
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "IntrinsicValidatorIsCompleteHandler423A78A1": Object {
      "DependsOn": Array [
        "IntrinsicValidatorIsCompleteHandlerServiceRoleDefaultPolicy0A0FF4F6",
        "IntrinsicValidatorIsCompleteHandlerServiceRole704A2806",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "af90e21a130cf1ecf0ca420cfa724c21d5b600c54c809c09a7f050dfdf91caca.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "STATE_MACHINE_ARN": Object {
              "Ref": "IntrinsicValidatorStateMachine503A46CB",
            },
          },
        },
        "Handler": "intrinsic-validator-provider.isCompleteHandler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "IntrinsicValidatorIsCompleteHandlerServiceRole704A2806",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "IntrinsicValidatorIsCompleteHandlerLogRetention2B92D325": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "IntrinsicValidatorIsCompleteHandler423A78A1",
              },
            ],
          ],
        },
        "RetentionInDays": 30,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "IntrinsicValidatorIsCompleteHandlerServiceRole704A2806": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "IntrinsicValidatorIsCompleteHandlerServiceRoleDefaultPolicy0A0FF4F6": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "states:ListExecutions",
                "states:ListStateMachines",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "IntrinsicValidatorStateMachine503A46CB",
              },
            },
            Object {
              "Action": Array [
                "states:DescribeExecution",
                "states:DescribeStateMachineForExecution",
                "states:GetExecutionHistory",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":states:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":execution:",
                    Object {
                      "Fn::Select": Array [
                        6,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "IntrinsicValidatorStateMachine503A46CB",
                            },
                          ],
                        },
                      ],
                    },
                    ":*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "states:ListActivities",
                "states:DescribeStateMachine",
                "states:DescribeActivity",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "IntrinsicValidatorIsCompleteHandlerServiceRoleDefaultPolicy0A0FF4F6",
        "Roles": Array [
          Object {
            "Ref": "IntrinsicValidatorIsCompleteHandlerServiceRole704A2806",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "IntrinsicValidatorOnEventHandler47CDD484": Object {
      "DependsOn": Array [
        "IntrinsicValidatorOnEventHandlerServiceRoleDefaultPolicy14391CA9",
        "IntrinsicValidatorOnEventHandlerServiceRoleEE869675",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "af90e21a130cf1ecf0ca420cfa724c21d5b600c54c809c09a7f050dfdf91caca.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "STATE_MACHINE_ARN": Object {
              "Ref": "IntrinsicValidatorStateMachine503A46CB",
            },
          },
        },
        "Handler": "intrinsic-validator-provider.onEventHandler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "IntrinsicValidatorOnEventHandlerServiceRoleEE869675",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "IntrinsicValidatorOnEventHandlerLogRetention2289578F": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "IntrinsicValidatorOnEventHandler47CDD484",
              },
            ],
          ],
        },
        "RetentionInDays": 30,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "IntrinsicValidatorOnEventHandlerServiceRoleDefaultPolicy14391CA9": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "IntrinsicValidatorStateMachine503A46CB",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "IntrinsicValidatorOnEventHandlerServiceRoleDefaultPolicy14391CA9",
        "Roles": Array [
          Object {
            "Ref": "IntrinsicValidatorOnEventHandlerServiceRoleEE869675",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "IntrinsicValidatorOnEventHandlerServiceRoleEE869675": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "IntrinsicValidatorProviderframeworkisComplete26093F1B": Object {
      "DependsOn": Array [
        "IntrinsicValidatorProviderframeworkisCompleteServiceRoleDefaultPolicy4529A03D",
        "IntrinsicValidatorProviderframeworkisCompleteServiceRole3970DE37",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "eaeb69bc290b516fe3b049f89d6118b22249df682fbabf56af300cf345198574.zip",
        },
        "Description": "AWS CDK resource provider framework - isComplete (IntegCloudwatchAlarmLit/IntrinsicValidator/Provider)",
        "Environment": Object {
          "Variables": Object {
            "USER_IS_COMPLETE_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "IntrinsicValidatorIsCompleteHandler423A78A1",
                "Arn",
              ],
            },
            "USER_ON_EVENT_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "IntrinsicValidatorOnEventHandler47CDD484",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.isComplete",
        "Role": Object {
          "Fn::GetAtt": Array [
            "IntrinsicValidatorProviderframeworkisCompleteServiceRole3970DE37",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "IntrinsicValidatorProviderframeworkisCompleteLogRetention8CFABEC6": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "IntrinsicValidatorProviderframeworkisComplete26093F1B",
              },
            ],
          ],
        },
        "RetentionInDays": 30,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "IntrinsicValidatorProviderframeworkisCompleteServiceRole3970DE37": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "IntrinsicValidatorProviderframeworkisCompleteServiceRoleDefaultPolicy4529A03D": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "IntrinsicValidatorOnEventHandler47CDD484",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "IntrinsicValidatorOnEventHandler47CDD484",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "IntrinsicValidatorIsCompleteHandler423A78A1",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "IntrinsicValidatorIsCompleteHandler423A78A1",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "IntrinsicValidatorProviderframeworkisCompleteServiceRoleDefaultPolicy4529A03D",
        "Roles": Array [
          Object {
            "Ref": "IntrinsicValidatorProviderframeworkisCompleteServiceRole3970DE37",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "IntrinsicValidatorProviderframeworkonEvent82CE92C0": Object {
      "DependsOn": Array [
        "IntrinsicValidatorProviderframeworkonEventServiceRoleDefaultPolicyC06C6BB0",
        "IntrinsicValidatorProviderframeworkonEventServiceRole5C0AB086",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "eaeb69bc290b516fe3b049f89d6118b22249df682fbabf56af300cf345198574.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (IntegCloudwatchAlarmLit/IntrinsicValidator/Provider)",
        "Environment": Object {
          "Variables": Object {
            "USER_IS_COMPLETE_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "IntrinsicValidatorIsCompleteHandler423A78A1",
                "Arn",
              ],
            },
            "USER_ON_EVENT_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "IntrinsicValidatorOnEventHandler47CDD484",
                "Arn",
              ],
            },
            "WAITER_STATE_MACHINE_ARN": Object {
              "Ref": "IntrinsicValidatorProviderwaiterstatemachineDF9DBBD8",
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": Object {
          "Fn::GetAtt": Array [
            "IntrinsicValidatorProviderframeworkonEventServiceRole5C0AB086",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "IntrinsicValidatorProviderframeworkonEventLogRetention8AB1B53C": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "IntrinsicValidatorProviderframeworkonEvent82CE92C0",
              },
            ],
          ],
        },
        "RetentionInDays": 30,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "IntrinsicValidatorProviderframeworkonEventServiceRole5C0AB086": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "IntrinsicValidatorProviderframeworkonEventServiceRoleDefaultPolicyC06C6BB0": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "IntrinsicValidatorOnEventHandler47CDD484",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "IntrinsicValidatorOnEventHandler47CDD484",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "IntrinsicValidatorIsCompleteHandler423A78A1",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "IntrinsicValidatorIsCompleteHandler423A78A1",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "IntrinsicValidatorProviderwaiterstatemachineDF9DBBD8",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "IntrinsicValidatorProviderframeworkonEventServiceRoleDefaultPolicyC06C6BB0",
        "Roles": Array [
          Object {
            "Ref": "IntrinsicValidatorProviderframeworkonEventServiceRole5C0AB086",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "IntrinsicValidatorProviderframeworkonTimeoutC3AE935A": Object {
      "DependsOn": Array [
        "IntrinsicValidatorProviderframeworkonTimeoutServiceRoleDefaultPolicyE147BCD2",
        "IntrinsicValidatorProviderframeworkonTimeoutServiceRole673B9931",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "eaeb69bc290b516fe3b049f89d6118b22249df682fbabf56af300cf345198574.zip",
        },
        "Description": "AWS CDK resource provider framework - onTimeout (IntegCloudwatchAlarmLit/IntrinsicValidator/Provider)",
        "Environment": Object {
          "Variables": Object {
            "USER_IS_COMPLETE_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "IntrinsicValidatorIsCompleteHandler423A78A1",
                "Arn",
              ],
            },
            "USER_ON_EVENT_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "IntrinsicValidatorOnEventHandler47CDD484",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onTimeout",
        "Role": Object {
          "Fn::GetAtt": Array [
            "IntrinsicValidatorProviderframeworkonTimeoutServiceRole673B9931",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "IntrinsicValidatorProviderframeworkonTimeoutLogRetention94550242": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "IntrinsicValidatorProviderframeworkonTimeoutC3AE935A",
              },
            ],
          ],
        },
        "RetentionInDays": 30,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "IntrinsicValidatorProviderframeworkonTimeoutServiceRole673B9931": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "IntrinsicValidatorProviderframeworkonTimeoutServiceRoleDefaultPolicyE147BCD2": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "IntrinsicValidatorOnEventHandler47CDD484",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "IntrinsicValidatorOnEventHandler47CDD484",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "IntrinsicValidatorIsCompleteHandler423A78A1",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "IntrinsicValidatorIsCompleteHandler423A78A1",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "IntrinsicValidatorProviderframeworkonTimeoutServiceRoleDefaultPolicyE147BCD2",
        "Roles": Array [
          Object {
            "Ref": "IntrinsicValidatorProviderframeworkonTimeoutServiceRole673B9931",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "IntrinsicValidatorProviderwaiterstatemachineDF9DBBD8": Object {
      "DependsOn": Array [
        "IntrinsicValidatorProviderwaiterstatemachineRoleDefaultPolicy471E9E24",
        "IntrinsicValidatorProviderwaiterstatemachineRoleBB931BBD",
      ],
      "Properties": Object {
        "DefinitionString": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"StartAt\\":\\"framework-isComplete-task\\",\\"States\\":{\\"framework-isComplete-task\\":{\\"End\\":true,\\"Retry\\":[{\\"ErrorEquals\\":[\\"States.ALL\\"],\\"IntervalSeconds\\":5,\\"MaxAttempts\\":360,\\"BackoffRate\\":1}],\\"Catch\\":[{\\"ErrorEquals\\":[\\"States.ALL\\"],\\"Next\\":\\"framework-onTimeout-task\\"}],\\"Type\\":\\"Task\\",\\"Resource\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "IntrinsicValidatorProviderframeworkisComplete26093F1B",
                  "Arn",
                ],
              },
              "\\"},\\"framework-onTimeout-task\\":{\\"End\\":true,\\"Type\\":\\"Task\\",\\"Resource\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "IntrinsicValidatorProviderframeworkonTimeoutC3AE935A",
                  "Arn",
                ],
              },
              "\\"}}}",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "IntrinsicValidatorProviderwaiterstatemachineRoleBB931BBD",
            "Arn",
          ],
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
    },
    "IntrinsicValidatorProviderwaiterstatemachineRoleBB931BBD": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": Object {
                  "Fn::FindInMap": Array [
                    "ServiceprincipalMap",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    "states",
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "IntrinsicValidatorProviderwaiterstatemachineRoleDefaultPolicy471E9E24": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "IntrinsicValidatorProviderframeworkisComplete26093F1B",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "IntrinsicValidatorProviderframeworkisComplete26093F1B",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "IntrinsicValidatorProviderframeworkonTimeoutC3AE935A",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "IntrinsicValidatorProviderframeworkonTimeoutC3AE935A",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "IntrinsicValidatorProviderwaiterstatemachineRoleDefaultPolicy471E9E24",
        "Roles": Array [
          Object {
            "Ref": "IntrinsicValidatorProviderwaiterstatemachineRoleBB931BBD",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "IntrinsicValidatorStateMachine503A46CB": Object {
      "DependsOn": Array [
        "IntrinsicValidatorStateMachineRoleDefaultPolicy24A129F9",
        "IntrinsicValidatorStateMachineRole4BD3BBAE",
      ],
      "Properties": Object {
        "DefinitionString": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"StartAt\\":\\"Validations\\",\\"States\\":{\\"Validations\\":{\\"Type\\":\\"Parallel\\",\\"End\\":true,\\"Branches\\":[{\\"StartAt\\":\\"[0] MonitorAlarm\\",\\"States\\":{\\"[0] MonitorAlarm\\":{\\"End\\":true,\\"Catch\\":[{\\"ErrorEquals\\":[\\"States.ALL\\"],\\"Next\\":\\"[0] MonitorAlarm - Alarming\\"}],\\"Type\\":\\"Task\\",\\"Resource\\":\\"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::states:startExecution.sync:2\\",\\"Parameters\\":{\\"Input\\":{\\"AlarmName\\":\\"",
              Object {
                "Ref": "TestAlarmsCompositeNeverAlarming02CDF5B3",
              },
              "\\",\\"MonitoringDurationSeconds\\":60},\\"StateMachineArn\\":\\"",
              Object {
                "Ref": "SingletonAlarmMonitorStateMachine9830D808",
              },
              "\\"}},\\"[0] MonitorAlarm - Alarming\\":{\\"Type\\":\\"Fail\\",\\"Error\\":\\"Alarm\\",\\"Cause\\":\\"",
              Object {
                "Ref": "TestAlarmsCompositeNeverAlarming02CDF5B3",
              },
              " is alarming\\"}}}]}}}",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "IntrinsicValidatorStateMachineRole4BD3BBAE",
            "Arn",
          ],
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
    },
    "IntrinsicValidatorStateMachineRole4BD3BBAE": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": Object {
                  "Fn::FindInMap": Array [
                    "ServiceprincipalMap",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    "states",
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "IntrinsicValidatorStateMachineRoleDefaultPolicy24A129F9": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "SingletonAlarmMonitorStateMachine9830D808",
              },
            },
            Object {
              "Action": Array [
                "states:DescribeExecution",
                "states:StopExecution",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":states:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":execution:",
                    Object {
                      "Fn::Select": Array [
                        6,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "SingletonAlarmMonitorStateMachine9830D808",
                            },
                          ],
                        },
                      ],
                    },
                    "*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "events:PutTargets",
                "events:PutRule",
                "events:DescribeRule",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":events:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":rule/StepFunctionsGetEventsForStepFunctionsExecutionRule",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "IntrinsicValidatorStateMachineRoleDefaultPolicy24A129F9",
        "Roles": Array [
          Object {
            "Ref": "IntrinsicValidatorStateMachineRole4BD3BBAE",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": Object {
      "DependsOn": Array [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "4cd567bf52e0f31674ae9e960efae8855b8b1249fa9997799ae47dc9f80e9ff8.zip",
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": Array [
          Object {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SingletonAlarmMonitorCheckAlarmStatusFunction294DA39A": Object {
      "DependsOn": Array [
        "SingletonAlarmMonitorCheckAlarmStatusFunctionServiceRoleDefaultPolicy2E6A6615",
        "SingletonAlarmMonitorCheckAlarmStatusFunctionServiceRoleA8B357EC",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "af90e21a130cf1ecf0ca420cfa724c21d5b600c54c809c09a7f050dfdf91caca.zip",
        },
        "Handler": "check-alarm-status.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "SingletonAlarmMonitorCheckAlarmStatusFunctionServiceRoleA8B357EC",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "SingletonAlarmMonitorCheckAlarmStatusFunctionLogRetention871F38F1": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "SingletonAlarmMonitorCheckAlarmStatusFunction294DA39A",
              },
            ],
          ],
        },
        "RetentionInDays": 30,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "SingletonAlarmMonitorCheckAlarmStatusFunctionServiceRoleA8B357EC": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SingletonAlarmMonitorCheckAlarmStatusFunctionServiceRoleDefaultPolicy2E6A6615": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "cloudwatch:DescribeAlarms",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SingletonAlarmMonitorCheckAlarmStatusFunctionServiceRoleDefaultPolicy2E6A6615",
        "Roles": Array [
          Object {
            "Ref": "SingletonAlarmMonitorCheckAlarmStatusFunctionServiceRoleA8B357EC",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SingletonAlarmMonitorStateMachine9830D808": Object {
      "DependsOn": Array [
        "SingletonAlarmMonitorStateMachineRoleDefaultPolicy445274A5",
        "SingletonAlarmMonitorStateMachineRoleBFB10518",
      ],
      "Properties": Object {
        "DefinitionString": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"StartAt\\":\\"CheckAlarmStatus\\",\\"States\\":{\\"CheckAlarmStatus\\":{\\"Next\\":\\"AlarmStatusChoice\\",\\"Retry\\":[{\\"ErrorEquals\\":[\\"Lambda.ServiceException\\",\\"Lambda.AWSLambdaException\\",\\"Lambda.SdkClientException\\"],\\"IntervalSeconds\\":2,\\"MaxAttempts\\":6,\\"BackoffRate\\":2},{\\"ErrorEquals\\":[\\"States.ALL\\"],\\"MaxAttempts\\":3}],\\"Catch\\":[{\\"ErrorEquals\\":[\\"States.ALL\\"],\\"Next\\":\\"BugState\\"}],\\"Type\\":\\"Task\\",\\"ResultPath\\":\\"$.CheckAlarmStatus\\",\\"ResultSelector\\":{\\"Status.$\\":\\"$.Payload.Status\\"},\\"Resource\\":\\"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke\\",\\"Parameters\\":{\\"FunctionName\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "SingletonAlarmMonitorCheckAlarmStatusFunction294DA39A",
                  "Arn",
                ],
              },
              "\\",\\"Payload\\":{\\"AlarmName.$\\":\\"$.AlarmName\\",\\"MonitoringDurationSeconds.$\\":\\"$.MonitoringDurationSeconds\\",\\"StartTime.$\\":\\"$$.Execution.StartTime\\"}}},\\"DelayThenNextCheckStatus\\":{\\"Type\\":\\"Wait\\",\\"Seconds\\":30,\\"Next\\":\\"CheckAlarmStatus\\"},\\"AlarmStatusChoice\\":{\\"Type\\":\\"Choice\\",\\"Choices\\":[{\\"Variable\\":\\"$.CheckAlarmStatus.Status\\",\\"StringEquals\\":\\"ALARM\\",\\"Next\\":\\"FailBecauseAlarming\\"},{\\"Variable\\":\\"$.CheckAlarmStatus.Status\\",\\"StringEquals\\":\\"MONITORING\\",\\"Next\\":\\"DelayThenNextCheckStatus\\"},{\\"Variable\\":\\"$.CheckAlarmStatus.Status\\",\\"StringEquals\\":\\"NO_ALARM\\",\\"Next\\":\\"NoAlarm\\"}],\\"Default\\":\\"BugState\\"},\\"BugState\\":{\\"Type\\":\\"Fail\\"},\\"FailBecauseAlarming\\":{\\"Type\\":\\"Fail\\"},\\"NoAlarm\\":{\\"Type\\":\\"Succeed\\"}}}",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "SingletonAlarmMonitorStateMachineRoleBFB10518",
            "Arn",
          ],
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
    },
    "SingletonAlarmMonitorStateMachineRoleBFB10518": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": Object {
                  "Fn::FindInMap": Array [
                    "ServiceprincipalMap",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    "states",
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "SingletonAlarmMonitorStateMachineRoleDefaultPolicy445274A5": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "SingletonAlarmMonitorCheckAlarmStatusFunction294DA39A",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "SingletonAlarmMonitorCheckAlarmStatusFunction294DA39A",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SingletonAlarmMonitorStateMachineRoleDefaultPolicy445274A5",
        "Roles": Array [
          Object {
            "Ref": "SingletonAlarmMonitorStateMachineRoleBFB10518",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TestAlarmsAlwaysAlarming69FED027": Object {
      "Properties": Object {
        "ComparisonOperator": "LessThanThreshold",
        "Dimensions": Array [
          Object {
            "Name": "Currency",
            "Value": "USD",
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "EstimatedCharges",
        "Namespace": "AWS/Billing",
        "Period": 32400,
        "Statistic": "Maximum",
        "Threshold": 99999999999,
        "TreatMissingData": "breaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "TestAlarmsCompositeAlwaysAlarmingA7E34597": Object {
      "Properties": Object {
        "AlarmName": "IntegCloudwatchAlarmLitTestAlarmsCompositeAlwaysAlarming50AFE6C8",
        "AlarmRule": Object {
          "Fn::Join": Array [
            "",
            Array [
              "(ALARM(\\"",
              Object {
                "Fn::GetAtt": Array [
                  "TestAlarmsAlwaysAlarming69FED027",
                  "Arn",
                ],
              },
              "\\") OR ALARM(\\"",
              Object {
                "Fn::GetAtt": Array [
                  "TestAlarmsNeverAlarmingHopefullyFD878B05",
                  "Arn",
                ],
              },
              "\\"))",
            ],
          ],
        },
      },
      "Type": "AWS::CloudWatch::CompositeAlarm",
    },
    "TestAlarmsCompositeNeverAlarming02CDF5B3": Object {
      "Properties": Object {
        "AlarmName": "IntegCloudwatchAlarmLitTestAlarmsCompositeNeverAlarming3EB5135B",
        "AlarmRule": Object {
          "Fn::Join": Array [
            "",
            Array [
              "(ALARM(\\"",
              Object {
                "Fn::GetAtt": Array [
                  "TestAlarmsNeverAlarmingHopefullyFD878B05",
                  "Arn",
                ],
              },
              "\\"))",
            ],
          ],
        },
      },
      "Type": "AWS::CloudWatch::CompositeAlarm",
    },
    "TestAlarmsNeverAlarmingHopefullyFD878B05": Object {
      "Properties": Object {
        "ComparisonOperator": "GreaterThanThreshold",
        "Dimensions": Array [
          Object {
            "Name": "Currency",
            "Value": "USD",
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "EstimatedCharges",
        "Namespace": "AWS/Billing",
        "Period": 32400,
        "Statistic": "Maximum",
        "Threshold": 99999999999,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
