// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`snapshot 1`] = `
Object {
  "Parameters": Object {
    "AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24ArtifactHashBA91B77F": Object {
      "Description": "Artifact hash for asset \\"67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24\\"",
      "Type": "String",
    },
    "AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24S3Bucket4D46ABB5": Object {
      "Description": "S3 bucket for asset \\"67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24\\"",
      "Type": "String",
    },
    "AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24S3VersionKeyB0F28861": Object {
      "Description": "S3 key for asset version \\"67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24\\"",
      "Type": "String",
    },
    "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cArtifactHash627DAAA7": Object {
      "Description": "Artifact hash for asset \\"c691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49c\\"",
      "Type": "String",
    },
    "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3BucketEAC9DD43": Object {
      "Description": "S3 bucket for asset \\"c691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49c\\"",
      "Type": "String",
    },
    "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKeyDD9AE9E7": Object {
      "Description": "S3 key for asset version \\"c691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49c\\"",
      "Type": "String",
    },
    "AssetParametersf7ba52e204a711b5a27c7ee3ce46767b37e2f64e49e2a5b3d3d3129494b7a2e9ArtifactHashA838B621": Object {
      "Description": "Artifact hash for asset \\"f7ba52e204a711b5a27c7ee3ce46767b37e2f64e49e2a5b3d3d3129494b7a2e9\\"",
      "Type": "String",
    },
    "AssetParametersf7ba52e204a711b5a27c7ee3ce46767b37e2f64e49e2a5b3d3d3129494b7a2e9S3Bucket275930E7": Object {
      "Description": "S3 bucket for asset \\"f7ba52e204a711b5a27c7ee3ce46767b37e2f64e49e2a5b3d3d3129494b7a2e9\\"",
      "Type": "String",
    },
    "AssetParametersf7ba52e204a711b5a27c7ee3ce46767b37e2f64e49e2a5b3d3d3129494b7a2e9S3VersionKey83798059": Object {
      "Description": "S3 key for asset version \\"f7ba52e204a711b5a27c7ee3ce46767b37e2f64e49e2a5b3d3d3129494b7a2e9\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "ClusterEB0386A7": Object {
      "Type": "AWS::ECS::Cluster",
    },
    "ClusterVpcFAA3CEDF": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "ItLitFargate/Cluster/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "ClusterVpcIGW1E358A6E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "ItLitFargate/Cluster/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "ClusterVpcPrivateSubnet1DefaultRoute3B4D40DD": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "ClusterVpcPublicSubnet1NATGateway0693C346",
        },
        "RouteTableId": Object {
          "Ref": "ClusterVpcPrivateSubnet1RouteTable5AAEDA3F",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "ClusterVpcPrivateSubnet1RouteTable5AAEDA3F": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "ItLitFargate/Cluster/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "ClusterVpcFAA3CEDF",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "ClusterVpcPrivateSubnet1RouteTableAssociation9B8A88D9": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "ClusterVpcPrivateSubnet1RouteTable5AAEDA3F",
        },
        "SubnetId": Object {
          "Ref": "ClusterVpcPrivateSubnet1SubnetA4EB481A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "ClusterVpcPrivateSubnet1SubnetA4EB481A": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.128.0/18",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "ItLitFargate/Cluster/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "ClusterVpcFAA3CEDF",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "ClusterVpcPrivateSubnet2DefaultRoute011666AF": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "ClusterVpcPublicSubnet2NATGateway00B24686",
        },
        "RouteTableId": Object {
          "Ref": "ClusterVpcPrivateSubnet2RouteTable73064A66",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "ClusterVpcPrivateSubnet2RouteTable73064A66": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "ItLitFargate/Cluster/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "ClusterVpcFAA3CEDF",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "ClusterVpcPrivateSubnet2RouteTableAssociationFB21349E": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "ClusterVpcPrivateSubnet2RouteTable73064A66",
        },
        "SubnetId": Object {
          "Ref": "ClusterVpcPrivateSubnet2SubnetBD1ECB6E",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "ClusterVpcPrivateSubnet2SubnetBD1ECB6E": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.192.0/18",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "ItLitFargate/Cluster/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "ClusterVpcFAA3CEDF",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "ClusterVpcPublicSubnet1DefaultRoute62DA4B4B": Object {
      "DependsOn": Array [
        "ClusterVpcVPCGW47AC17E9",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "ClusterVpcIGW1E358A6E",
        },
        "RouteTableId": Object {
          "Ref": "ClusterVpcPublicSubnet1RouteTable5594A636",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "ClusterVpcPublicSubnet1EIP433C56EE": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "ItLitFargate/Cluster/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "ClusterVpcPublicSubnet1NATGateway0693C346": Object {
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "ClusterVpcPublicSubnet1EIP433C56EE",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "ClusterVpcPublicSubnet1SubnetA9F7E0A5",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "ItLitFargate/Cluster/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "ClusterVpcPublicSubnet1RouteTable5594A636": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "ItLitFargate/Cluster/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "ClusterVpcFAA3CEDF",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "ClusterVpcPublicSubnet1RouteTableAssociation0FBEF1F4": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "ClusterVpcPublicSubnet1RouteTable5594A636",
        },
        "SubnetId": Object {
          "Ref": "ClusterVpcPublicSubnet1SubnetA9F7E0A5",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "ClusterVpcPublicSubnet1SubnetA9F7E0A5": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.0.0/18",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "ItLitFargate/Cluster/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "ClusterVpcFAA3CEDF",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "ClusterVpcPublicSubnet2DefaultRoute97446C8A": Object {
      "DependsOn": Array [
        "ClusterVpcVPCGW47AC17E9",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "ClusterVpcIGW1E358A6E",
        },
        "RouteTableId": Object {
          "Ref": "ClusterVpcPublicSubnet2RouteTable7B43F18C",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "ClusterVpcPublicSubnet2EIP203DF3E5": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "ItLitFargate/Cluster/Vpc/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "ClusterVpcPublicSubnet2NATGateway00B24686": Object {
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "ClusterVpcPublicSubnet2EIP203DF3E5",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "ClusterVpcPublicSubnet2Subnet059113C4",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "ItLitFargate/Cluster/Vpc/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "ClusterVpcPublicSubnet2RouteTable7B43F18C": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "ItLitFargate/Cluster/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "ClusterVpcFAA3CEDF",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "ClusterVpcPublicSubnet2RouteTableAssociation8446B27D": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "ClusterVpcPublicSubnet2RouteTable7B43F18C",
        },
        "SubnetId": Object {
          "Ref": "ClusterVpcPublicSubnet2Subnet059113C4",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "ClusterVpcPublicSubnet2Subnet059113C4": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.64.0/18",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "ItLitFargate/Cluster/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "ClusterVpcFAA3CEDF",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "ClusterVpcVPCGW47AC17E9": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "ClusterVpcIGW1E358A6E",
        },
        "VpcId": Object {
          "Ref": "ClusterVpcFAA3CEDF",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "IntrinsicValidator72B8901E": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "IntrinsicValidatorProviderframeworkonEvent82CE92C0",
            "Arn",
          ],
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "IntrinsicValidatorIsCompleteHandler423A78A1": Object {
      "DependsOn": Array [
        "IntrinsicValidatorIsCompleteHandlerServiceRoleDefaultPolicy0A0FF4F6",
        "IntrinsicValidatorIsCompleteHandlerServiceRole704A2806",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersf7ba52e204a711b5a27c7ee3ce46767b37e2f64e49e2a5b3d3d3129494b7a2e9S3Bucket275930E7",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersf7ba52e204a711b5a27c7ee3ce46767b37e2f64e49e2a5b3d3d3129494b7a2e9S3VersionKey83798059",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersf7ba52e204a711b5a27c7ee3ce46767b37e2f64e49e2a5b3d3d3129494b7a2e9S3VersionKey83798059",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "STATE_MACHINE_ARN": Object {
              "Ref": "IntrinsicValidatorStateMachine503A46CB",
            },
          },
        },
        "Handler": "intrinsic-validator-provider.isCompleteHandler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "IntrinsicValidatorIsCompleteHandlerServiceRole704A2806",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "IntrinsicValidatorIsCompleteHandlerLogRetention2B92D325": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "IntrinsicValidatorIsCompleteHandler423A78A1",
              },
            ],
          ],
        },
        "RetentionInDays": 30,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "IntrinsicValidatorIsCompleteHandlerServiceRole704A2806": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "IntrinsicValidatorIsCompleteHandlerServiceRoleDefaultPolicy0A0FF4F6": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "states:ListExecutions",
                "states:ListStateMachines",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "IntrinsicValidatorStateMachine503A46CB",
              },
            },
            Object {
              "Action": Array [
                "states:DescribeExecution",
                "states:DescribeStateMachineForExecution",
                "states:GetExecutionHistory",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":states:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":execution:",
                    Object {
                      "Fn::Select": Array [
                        6,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "IntrinsicValidatorStateMachine503A46CB",
                            },
                          ],
                        },
                      ],
                    },
                    ":*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "states:ListActivities",
                "states:DescribeStateMachine",
                "states:DescribeActivity",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "IntrinsicValidatorIsCompleteHandlerServiceRoleDefaultPolicy0A0FF4F6",
        "Roles": Array [
          Object {
            "Ref": "IntrinsicValidatorIsCompleteHandlerServiceRole704A2806",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "IntrinsicValidatorOnEventHandler47CDD484": Object {
      "DependsOn": Array [
        "IntrinsicValidatorOnEventHandlerServiceRoleDefaultPolicy14391CA9",
        "IntrinsicValidatorOnEventHandlerServiceRoleEE869675",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersf7ba52e204a711b5a27c7ee3ce46767b37e2f64e49e2a5b3d3d3129494b7a2e9S3Bucket275930E7",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersf7ba52e204a711b5a27c7ee3ce46767b37e2f64e49e2a5b3d3d3129494b7a2e9S3VersionKey83798059",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersf7ba52e204a711b5a27c7ee3ce46767b37e2f64e49e2a5b3d3d3129494b7a2e9S3VersionKey83798059",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "STATE_MACHINE_ARN": Object {
              "Ref": "IntrinsicValidatorStateMachine503A46CB",
            },
          },
        },
        "Handler": "intrinsic-validator-provider.onEventHandler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "IntrinsicValidatorOnEventHandlerServiceRoleEE869675",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "IntrinsicValidatorOnEventHandlerLogRetention2289578F": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "IntrinsicValidatorOnEventHandler47CDD484",
              },
            ],
          ],
        },
        "RetentionInDays": 30,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "IntrinsicValidatorOnEventHandlerServiceRoleDefaultPolicy14391CA9": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "IntrinsicValidatorStateMachine503A46CB",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "IntrinsicValidatorOnEventHandlerServiceRoleDefaultPolicy14391CA9",
        "Roles": Array [
          Object {
            "Ref": "IntrinsicValidatorOnEventHandlerServiceRoleEE869675",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "IntrinsicValidatorOnEventHandlerServiceRoleEE869675": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "IntrinsicValidatorProviderframeworkisComplete26093F1B": Object {
      "DependsOn": Array [
        "IntrinsicValidatorProviderframeworkisCompleteServiceRoleDefaultPolicy4529A03D",
        "IntrinsicValidatorProviderframeworkisCompleteServiceRole3970DE37",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3BucketEAC9DD43",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKeyDD9AE9E7",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKeyDD9AE9E7",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Description": "AWS CDK resource provider framework - isComplete (ItLitFargate/IntrinsicValidator/Provider)",
        "Environment": Object {
          "Variables": Object {
            "USER_IS_COMPLETE_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "IntrinsicValidatorIsCompleteHandler423A78A1",
                "Arn",
              ],
            },
            "USER_ON_EVENT_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "IntrinsicValidatorOnEventHandler47CDD484",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.isComplete",
        "Role": Object {
          "Fn::GetAtt": Array [
            "IntrinsicValidatorProviderframeworkisCompleteServiceRole3970DE37",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "IntrinsicValidatorProviderframeworkisCompleteLogRetention8CFABEC6": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "IntrinsicValidatorProviderframeworkisComplete26093F1B",
              },
            ],
          ],
        },
        "RetentionInDays": 30,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "IntrinsicValidatorProviderframeworkisCompleteServiceRole3970DE37": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "IntrinsicValidatorProviderframeworkisCompleteServiceRoleDefaultPolicy4529A03D": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "IntrinsicValidatorOnEventHandler47CDD484",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "IntrinsicValidatorIsCompleteHandler423A78A1",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "IntrinsicValidatorProviderframeworkisCompleteServiceRoleDefaultPolicy4529A03D",
        "Roles": Array [
          Object {
            "Ref": "IntrinsicValidatorProviderframeworkisCompleteServiceRole3970DE37",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "IntrinsicValidatorProviderframeworkonEvent82CE92C0": Object {
      "DependsOn": Array [
        "IntrinsicValidatorProviderframeworkonEventServiceRoleDefaultPolicyC06C6BB0",
        "IntrinsicValidatorProviderframeworkonEventServiceRole5C0AB086",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3BucketEAC9DD43",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKeyDD9AE9E7",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKeyDD9AE9E7",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Description": "AWS CDK resource provider framework - onEvent (ItLitFargate/IntrinsicValidator/Provider)",
        "Environment": Object {
          "Variables": Object {
            "USER_IS_COMPLETE_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "IntrinsicValidatorIsCompleteHandler423A78A1",
                "Arn",
              ],
            },
            "USER_ON_EVENT_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "IntrinsicValidatorOnEventHandler47CDD484",
                "Arn",
              ],
            },
            "WAITER_STATE_MACHINE_ARN": Object {
              "Ref": "IntrinsicValidatorProviderwaiterstatemachineDF9DBBD8",
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": Object {
          "Fn::GetAtt": Array [
            "IntrinsicValidatorProviderframeworkonEventServiceRole5C0AB086",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "IntrinsicValidatorProviderframeworkonEventLogRetention8AB1B53C": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "IntrinsicValidatorProviderframeworkonEvent82CE92C0",
              },
            ],
          ],
        },
        "RetentionInDays": 30,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "IntrinsicValidatorProviderframeworkonEventServiceRole5C0AB086": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "IntrinsicValidatorProviderframeworkonEventServiceRoleDefaultPolicyC06C6BB0": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "IntrinsicValidatorOnEventHandler47CDD484",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "IntrinsicValidatorIsCompleteHandler423A78A1",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "IntrinsicValidatorProviderwaiterstatemachineDF9DBBD8",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "IntrinsicValidatorProviderframeworkonEventServiceRoleDefaultPolicyC06C6BB0",
        "Roles": Array [
          Object {
            "Ref": "IntrinsicValidatorProviderframeworkonEventServiceRole5C0AB086",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "IntrinsicValidatorProviderframeworkonTimeoutC3AE935A": Object {
      "DependsOn": Array [
        "IntrinsicValidatorProviderframeworkonTimeoutServiceRoleDefaultPolicyE147BCD2",
        "IntrinsicValidatorProviderframeworkonTimeoutServiceRole673B9931",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3BucketEAC9DD43",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKeyDD9AE9E7",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKeyDD9AE9E7",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Description": "AWS CDK resource provider framework - onTimeout (ItLitFargate/IntrinsicValidator/Provider)",
        "Environment": Object {
          "Variables": Object {
            "USER_IS_COMPLETE_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "IntrinsicValidatorIsCompleteHandler423A78A1",
                "Arn",
              ],
            },
            "USER_ON_EVENT_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "IntrinsicValidatorOnEventHandler47CDD484",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onTimeout",
        "Role": Object {
          "Fn::GetAtt": Array [
            "IntrinsicValidatorProviderframeworkonTimeoutServiceRole673B9931",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "IntrinsicValidatorProviderframeworkonTimeoutLogRetention94550242": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "IntrinsicValidatorProviderframeworkonTimeoutC3AE935A",
              },
            ],
          ],
        },
        "RetentionInDays": 30,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "IntrinsicValidatorProviderframeworkonTimeoutServiceRole673B9931": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "IntrinsicValidatorProviderframeworkonTimeoutServiceRoleDefaultPolicyE147BCD2": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "IntrinsicValidatorOnEventHandler47CDD484",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "IntrinsicValidatorIsCompleteHandler423A78A1",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "IntrinsicValidatorProviderframeworkonTimeoutServiceRoleDefaultPolicyE147BCD2",
        "Roles": Array [
          Object {
            "Ref": "IntrinsicValidatorProviderframeworkonTimeoutServiceRole673B9931",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "IntrinsicValidatorProviderwaiterstatemachineDF9DBBD8": Object {
      "DependsOn": Array [
        "IntrinsicValidatorProviderwaiterstatemachineRoleDefaultPolicy471E9E24",
        "IntrinsicValidatorProviderwaiterstatemachineRoleBB931BBD",
      ],
      "Properties": Object {
        "DefinitionString": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"StartAt\\":\\"framework-isComplete-task\\",\\"States\\":{\\"framework-isComplete-task\\":{\\"End\\":true,\\"Retry\\":[{\\"ErrorEquals\\":[\\"States.ALL\\"],\\"IntervalSeconds\\":5,\\"MaxAttempts\\":360,\\"BackoffRate\\":1}],\\"Catch\\":[{\\"ErrorEquals\\":[\\"States.ALL\\"],\\"Next\\":\\"framework-onTimeout-task\\"}],\\"Type\\":\\"Task\\",\\"Resource\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "IntrinsicValidatorProviderframeworkisComplete26093F1B",
                  "Arn",
                ],
              },
              "\\"},\\"framework-onTimeout-task\\":{\\"End\\":true,\\"Type\\":\\"Task\\",\\"Resource\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "IntrinsicValidatorProviderframeworkonTimeoutC3AE935A",
                  "Arn",
                ],
              },
              "\\"}}}",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "IntrinsicValidatorProviderwaiterstatemachineRoleBB931BBD",
            "Arn",
          ],
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
    },
    "IntrinsicValidatorProviderwaiterstatemachineRoleBB931BBD": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "states.",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ".amazonaws.com",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "IntrinsicValidatorProviderwaiterstatemachineRoleDefaultPolicy471E9E24": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "IntrinsicValidatorProviderframeworkisComplete26093F1B",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "IntrinsicValidatorProviderframeworkonTimeoutC3AE935A",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "IntrinsicValidatorProviderwaiterstatemachineRoleDefaultPolicy471E9E24",
        "Roles": Array [
          Object {
            "Ref": "IntrinsicValidatorProviderwaiterstatemachineRoleBB931BBD",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "IntrinsicValidatorStateMachine503A46CB": Object {
      "DependsOn": Array [
        "IntrinsicValidatorStateMachineRoleDefaultPolicy24A129F9",
        "IntrinsicValidatorStateMachineRole4BD3BBAE",
      ],
      "Properties": Object {
        "DefinitionString": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"StartAt\\":\\"Validations\\",\\"States\\":{\\"Validations\\":{\\"Type\\":\\"Parallel\\",\\"End\\":true,\\"Branches\\":[{\\"StartAt\\":\\"[0] FargateTaskSucceeds\\",\\"States\\":{\\"[0] FargateTaskSucceeds\\":{\\"End\\":true,\\"Type\\":\\"Task\\",\\"Resource\\":\\"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::ecs:runTask.sync\\",\\"Parameters\\":{\\"Cluster\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "ClusterEB0386A7",
                  "Arn",
                ],
              },
              "\\",\\"TaskDefinition\\":\\"ItLitFargateTaskDefinitionA70E739D\\",\\"NetworkConfiguration\\":{\\"AwsvpcConfiguration\\":{\\"Subnets\\":[\\"",
              Object {
                "Ref": "ClusterVpcPrivateSubnet1SubnetA4EB481A",
              },
              "\\",\\"",
              Object {
                "Ref": "ClusterVpcPrivateSubnet2SubnetBD1ECB6E",
              },
              "\\"],\\"SecurityGroups\\":[\\"",
              Object {
                "Fn::GetAtt": Array [
                  "IntrinsicValidatorValidations0FargateTaskSucceedsSecurityGroupC274FE8C",
                  "GroupId",
                ],
              },
              "\\"]}},\\"LaunchType\\":\\"FARGATE\\"}}}}]}}}",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "IntrinsicValidatorStateMachineRole4BD3BBAE",
            "Arn",
          ],
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
    },
    "IntrinsicValidatorStateMachineRole4BD3BBAE": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "states.",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ".amazonaws.com",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "IntrinsicValidatorStateMachineRoleDefaultPolicy24A129F9": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "ecs:RunTask",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Fn::Select": Array [
                        1,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "TaskDefinitionB36D86D9",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        2,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "TaskDefinitionB36D86D9",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        3,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "TaskDefinitionB36D86D9",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        4,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Ref": "TaskDefinitionB36D86D9",
                            },
                          ],
                        },
                      ],
                    },
                    ":",
                    Object {
                      "Fn::Select": Array [
                        0,
                        Object {
                          "Fn::Split": Array [
                            "/",
                            Object {
                              "Fn::Select": Array [
                                5,
                                Object {
                                  "Fn::Split": Array [
                                    ":",
                                    Object {
                                      "Ref": "TaskDefinitionB36D86D9",
                                    },
                                  ],
                                },
                              ],
                            },
                          ],
                        },
                      ],
                    },
                    "/",
                    Object {
                      "Fn::Select": Array [
                        1,
                        Object {
                          "Fn::Split": Array [
                            "/",
                            Object {
                              "Fn::Select": Array [
                                5,
                                Object {
                                  "Fn::Split": Array [
                                    ":",
                                    Object {
                                      "Ref": "TaskDefinitionB36D86D9",
                                    },
                                  ],
                                },
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "ecs:StopTask",
                "ecs:DescribeTasks",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "TaskDefinitionTaskRoleFD40A61D",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "events:PutTargets",
                "events:PutRule",
                "events:DescribeRule",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":events:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":rule/StepFunctionsGetEventsForECSTaskRule",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "IntrinsicValidatorStateMachineRoleDefaultPolicy24A129F9",
        "Roles": Array [
          Object {
            "Ref": "IntrinsicValidatorStateMachineRole4BD3BBAE",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "IntrinsicValidatorValidations0FargateTaskSucceedsSecurityGroupC274FE8C": Object {
      "Properties": Object {
        "GroupDescription": "ItLitFargate/IntrinsicValidator/Validations/[0] FargateTaskSucceeds/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "ClusterVpcFAA3CEDF",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": Object {
      "DependsOn": Array [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24S3Bucket4D46ABB5",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24S3VersionKeyB0F28861",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24S3VersionKeyB0F28861",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": Array [
          Object {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TaskDefinitionB36D86D9": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Command": Array [
              "true",
            ],
            "Essential": true,
            "Image": "alpine",
            "Name": "main",
          },
        ],
        "Cpu": "256",
        "Family": "ItLitFargateTaskDefinitionA70E739D",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "TaskDefinitionTaskRoleFD40A61D",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "TaskDefinitionTaskRoleFD40A61D": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
  },
}
`;
